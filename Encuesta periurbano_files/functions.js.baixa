
var msg = {
	ca: {
		'zoom_to_level':'Fes zoom per apropar-te a el lloc on vols situar el símbol. S\'activarà la funció i et permetrà arrossegar el símbol', 
		'name':'Nom', 
		'observations':'Observacions', 
		'save':'Guardar', 
		'delete':'Eliminar',
		'set_name_of_this_place':'Escriu el nom de el lloc', 
		'set_observations_of_this_place':'Escriu observacions', 
		'sure_to_delete':'¿Segur que voleu eliminar aquest punt?', 
		'max_elements_added_to_this_map':'Màxim de punts afegits al mapa', 
		'activity':'Activitat', 
		'set_activity':'Escriu l\'activitat', 
		'select_from_this_options_max_3':'Seleccioneu d\'entre aquestes opcions (màxim 3 respostes)',
		'select_from_this_options_max_1':'El conflicte és entre ... (màxim 1 resposta)',
		'demasiado_estrecho':'Massa estret',
		'mal_senalizado':'Mal senyalitzat',
		'firme_mal_estado':'Ferm en mal estat',
		'obst_nat_arti':'Obstacles naturals artificials',
		'presencia_basura':'Presència de brossa',
		'otros':'Altres',
		'max':'Màxim',
		'pie_bici':'Usuaris a peu i en bici',
		'pie_patines':'Usuaris a peu i en patins/patinet',
		'pie_motor':'Usuaris a peu i vehicles motoritzats',
		'bici_patines':'Usuaris en bici i en patins/patinet',
		'bici_motor':'Usuaris en bici i vehicles motoritzats',
		'animales':'Usuaris en general i animals de companyia sense vigilància',
		'terrenos_privados':'Usuaris en general i propietaris de terrenys privats',
		'miss_data':'Falten algunes preguntes per omplir',
		'miss_data_value':'Camp pendent per omplir',
		'max_3_values':'Màxim 3 opcions',
		'invalid_email':'El format de correu electrònic és invàlid',
		'is_not_number_0_100':'Ha de ser un número entre 0 i 100',
		'done':'Fet'
	}
	, es: {
		'zoom_to_level':'Haz zoom para acercarte al lugar donde quieres situar el símbolo. Se activará la función y te permitirá arrastrar el símbolo', 
		'name':'Nombre', 
		'observations':'Observaciones', 
		'save':'Guardar', 
		'delete':'Eliminar',
		'set_name_of_this_place':'Escribe el nombre del sitio', 
		'set_observations_of_this_place':'Escribe observaciones', 
		'sure_to_delete':'¿Estás seguro de eliminar este punto?', 
		'max_elements_added_to_this_map':'Máximo de puntos añadidos en el mapa', 
		'activity':'Actividad', 
		'set_activity':'Escribe la actividad', 
		'select_from_this_options_max_3':'Seleccione de entre estas opciones (máximo 3 respuestas)',
		'select_from_this_options_max_1':'El conflicto es entre... (máximo 1 respuesta)',
		'demasiado_estrecho':'Demasiado estrecho',
		'mal_senalizado':'Mal señalizado',
		'firme_mal_estado':'Firme en mal estado',
		'obst_nat_arti':'Obstáculos naturales artificiales',
		'presencia_basura':'Presencia de basura',
		'otros':'Otros',
		'max':'Máximo',
		'pie_bici':'Usuarios a pie y en bici',
		'pie_patines':'Usuarios a pie y en patines/patinete',
		'pie_motor':'Usuarios a pie y vehículos motorizados',
		'bici_patines':'Usuarios en bici y en patines/patinete',
		'bici_motor':'Usuarios en bici y vehículos motorizados',
		'animales':'Usuarios en general y animales de compañía sin vigilancia',
		'terrenos_privados':'Usuarios en general y propietarios de terrenos privados',
		'miss_data':'Faltan algunas preguntas por rellenar',
		'miss_data_value':'Campo pendiente de rellenar',
		'max_3_values':'Màxim 3 opcions',
		'invalid_email':'El formato de correo electrónico es inválido',
		'is_not_number_0_100':'Debe ser un número entre 0 y 100',
		'done':'Hecho'
	}
};

	
function loadUUID() {
	$("#528998823").val(user_uid);	
}


function myIP() {	
	var url_api = "https://api.ipify.org/?format=json"; // "http://api.hostip.info/get_html.php"		
	$.get(url_api, function( data ) {			
		if (data) {			
			if (data.hasOwnProperty("ip")) {				
				$("#528998822").val(MD5(data["ip"]));
			}
			
		}					
	});		
	return;
}	

function createMapInput(title, subtitle, title2, subtitle2, point_type, pin_map, popup_version, only_one_icon) {
	var node = document.createElement("div");  
	node.classList.add("legend");
	
	var res = "<span class=\"legend_label1 es mytooltip\" title1=\""+subtitle.es+"\" >"+title.es+"</span>";
	res = res + "<span class=\"legend_label1 ca  d-none mytooltip\" title1=\""+subtitle.ca+"\" >"+title.ca+"</span>";
	res = res + "<div class=\"legend_icons\">";
	res = res + "<img src=\"images/icons/red/letter_"+point_type+".png\" class=\"pin\" map=\""+pin_map+"\" point_type=\""+point_type+"\" point_level=\"1\" popup_version=\""+popup_version+"\" >";

	if (only_one_icon == false) {	
		res = res + "<img src=\"images/icons/orange/letter_"+point_type+".png\" class=\"pin\" map=\""+pin_map+"\" point_type=\""+point_type+"\" point_level=\"2\"  popup_version=\""+popup_version+"\" >";
		res = res + "<img src=\"images/icons/brown/letter_"+point_type+".png\" class=\"pin\" map=\""+pin_map+"\" point_type=\""+point_type+"\" point_level=\"3\" popup_version=\""+popup_version+"\" >";
		res = res + "<img src=\"images/icons/yellow/letter_"+point_type+".png\" class=\"pin\" map=\""+pin_map+"\" point_type=\""+point_type+"\" point_level=\"4\" popup_version=\""+popup_version+"\" >";
		res = res + "<img src=\"images/icons/green/letter_"+point_type+".png\" class=\"pin\" map=\""+pin_map+"\" point_type=\""+point_type+"\" point_level=\"5\" popup_version=\""+popup_version+"\" >";
	}
	
	res = res + "</div>";
	
	if (title2!=null) {	
		res = res + "<span class=\"legend_label2 es mytooltip\" title1=\""+subtitle2.es+"\" >"+title2.es+"</span>";
		res = res + "<span class=\"legend_label2 ca  d-none mytooltip\" title1=\""+subtitle2.ca+"\" >"+title2.ca+"</span>";
	}

	node.innerHTML = res;

	return node;
}


var maps = [];
var counter_elements = [];
var overlay = [];
var markers = [];
var min_zoom_allowed=12;
var current_infowindow;
var current_id = [];
var number_maps = 0;
var data_points = [];

function posTop() {
	var pos_top = 0;
	if (window.pageYOffset) {
		pos_top = Math.max(pos_top, window.pageYOffset);
	}
	
	if (window.document.body.scrollTop) {
		pos_top = Math.max(pos_top, window.document.body.scrollTop);
	}
	
	if (window.document.documentElement.scrollTop) {
		pos_top = Math.max(pos_top, window.document.documentElement.scrollTop);
	}

	if (document.documentElement.scrollTop) {
		pos_top = Math.max(pos_top, document.documentElement.scrollTop);
	} 

	if (document.body.scrollTop) {
		pos_top = Math.max(pos_top, document.body.scrollTop);
	}
	
	if (document.scrollingElement.scrollTop) {
		pos_top = Math.max(pos_top, document.scrollingElement.scrollTop);
	}
	
		
	if (window.scrollY) {
		pos_top = Math.max(pos_top, window.scrollY);	
	}
	
	if ($("html").scrollTop()) {
		pos_top = Math.max(pos_top, $("html").scrollTop());
	}
		
	if ($("body").scrollTop()) {
		pos_top = Math.max(pos_top, $("body").scrollTop());
	}
	
	
		
	return pos_top;
}

$(document).ready(function() {
	
  console.log("READY!!!");
  //myIP();
  //loadUUID();

  var mouseStartDrag=[0,0];  
  //var activePointPin = [16,37];  // = bottom center of the pin.  Change this value if the pin is changed  
  var activePointPin = [12,28]; 
  

  // jQuery-UI draggable
  $('.pinWrapper img').draggable({
    start: function(event, ui) {
      // this gives you the position of the mouse relative to the image.      
	  if(event.offsetX==undefined) {
		mouseStartDrag = [event.pageX-$(this).offset().left, event.pageY-$(this).offset().top];
		console.log("drag 1");
	  } else {
		mouseStartDrag = [event.offsetX, event.offsetY];
		console.log("drag 2");
		console.log(mouseStartDrag);
	  }	  

    },
    stop: function(event, ui) {
	
	  var id_map = $(this).attr('map');
	  var height_fixed = 655;
	 	  	  
	  
	  var scroll_top = posTop();	  
	  			  
	  // we look at the mouse position, subtract it from the position of the map, so we get the mouse position over the map	  
	  //var coordinatesOverDiv = [event.clientX - $('#map-canvas'+id_map).position().left - $('#question-map'+id_map).position().left, event.clientY - $('#map-canvas'+id_map).position().top - $('#question-map'+id_map).position().top + scroll_top];
	  // we don't want the mouse position, we want the position of the active point on the pin.
	  //var coordinatesOverDiv = [event.clientX - $('#map-canvas'+id_map).position().left, event.clientY - $('#map-canvas'+id_map).position().top + scroll_top];
	  var coordinatesOverDiv = [event.clientX - $('#map-canvas'+id_map).offset().left, event.clientY - $('#map-canvas'+id_map).offset().top + scroll_top];
	  //var coordinatesOverDiv = [event.clientX - $('#map-canvas'+id_map).position().left - $('#question-map'+id_map).position().left, event.clientY - $('#map-canvas'+id_map).position().top - $('#question-map'+id_map).position().top + scroll_top];

	console.log("coord1");
	console.log(coordinatesOverDiv);
	
		
	  coordinatesOverDiv = [		
		coordinatesOverDiv[0] + activePointPin[0] - mouseStartDrag[0], 
		coordinatesOverDiv[1] + activePointPin[1] - mouseStartDrag[1]
	  ];	  
	

	
	  // ask Google to get the position, corresponding to a pixel on the map
	  var pixelLatLng = overlay[id_map].getProjection().fromContainerPixelToLatLng( new google.maps.Point(coordinatesOverDiv[0], coordinatesOverDiv[1]) );
	  
	  var zoomLevel = maps[id_map].getZoom();		  
	  
	  if (zoomLevel<=min_zoom_allowed) {
		console.log(current_lang);
		alert(msg[current_lang]['zoom_to_level']);
	  } else if (counter_elements[id_map] >= 50) {
		alert(msg[current_lang]['max_elements_added_to_this_map']);
	  } else if(maps[id_map].getBounds().contains(pixelLatLng)) {		  		
	  

			console.log("version");
			console.log($(this).attr('popup_version'));
			
			
			if ($(this).attr('popup_version') == 2) {				
			
				var contentString = '<div><p>'+msg[current_lang]['select_from_this_options_max_3']+'<br>'
				+'<input type="checkbox" name="check_v2" value="estrecho" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['demasiado_estrecho']+'<br>'
				+'<input type="checkbox" name="check_v2" value="firme_mal_estado" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['firme_mal_estado']+'<br>'
				+'<input type="checkbox" name="check_v2" value="obst_nat_arti" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['obst_nat_arti']+'<br>'
				+'<input type="checkbox" name="check_v2" value="mal_senalizado" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['mal_senalizado']+'<br>'
				+'<input type="checkbox" name="check_v2" value="presencia_basura" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['presencia_basura']+'<br>'
				+'<input type="checkbox" name="check_v2" value="otros" onclick="return function_count_checked(\'check_v2\', 3, this.checked);"> '+msg[current_lang]['otros']+' <input type="text" maxlength="30" oninput="updatePoint('+id_map+', '+current_id[id_map]+', \'otros_v2\', this.value);" />'+'<br>'
				+'<br><button style="float:left;background-color:green;color:white;border:none;cursor:pointer;" onclick="function_read_checbox('+id_map+', '+current_id[id_map]+',\'check_v2\');current_infowindow.close();return false;">'+msg[current_lang]['done']+'</button>'		  
				+'<button style="float:right;background-color:red;color:white;border:none;cursor:pointer;" onclick="if (confirm(\''+msg[current_lang]['sure_to_delete']+'\')) {deleteElement('+id_map+', '+current_id[id_map]+');current_infowindow.close();}return false;">'+msg[current_lang]['delete']+'</button>'		  
				+'</div>';

				
			} else if ($(this).attr('popup_version') == 3) {
				
				var contentString = '<div><p>'+msg[current_lang]['select_from_this_options_max_1']+'<br>'
				+'<input type="radio" name="check_v3" value="pie_bici" > '+msg[current_lang]['pie_bici']+'<br>'
				+'<input type="radio" name="check_v3" value="pie_patines" > '+msg[current_lang]['pie_patines']+'<br>'
				+'<input type="radio" name="check_v3" value="pie_motor" > '+msg[current_lang]['pie_motor']+'<br>'
				+'<input type="radio" name="check_v3" value="bici_patines" > '+msg[current_lang]['bici_patines']+'<br>'
				+'<input type="radio" name="check_v3" value="bici_motor" > '+msg[current_lang]['bici_motor']+'<br>'
				+'<input type="radio" name="check_v3" value="animales" > '+msg[current_lang]['animales']+'<br>'
				+'<input type="radio" name="check_v3" value="terrenos_privados" > '+msg[current_lang]['terrenos_privados']+'<br>'
				+'<input type="radio" name="check_v3" value="otros" > '+msg[current_lang]['otros']+' <input type="text" maxlength="30" oninput="updatePoint('+id_map+', '+current_id[id_map]+', \'otros_v3\', this.value);" />'+'<br>'
				+'<br><button style="float:left;background-color:green;color:white;border:none;cursor:pointer;" onclick="function_read_checbox('+id_map+', '+current_id[id_map]+',\'check_v3\');current_infowindow.close();return false;">'+msg[current_lang]['done']+'</button>'		  
				+'<button style="float:right;background-color:red;color:white;border:none;cursor:pointer;" onclick="if (confirm(\''+msg[current_lang]['sure_to_delete']+'\')) {deleteElement('+id_map+', '+current_id[id_map]+');current_infowindow.close();}return false;">'+msg[current_lang]['delete']+'</button>'		  
				+'</div>';
				
			} else if ($(this).attr('popup_version') == 0) {
				
				var txt_otras = "";
				if ($(this).attr('point_type') == "z") {
					txt_otras = '<p>'+msg[current_lang]['activity']+'</br><input type="text" size="25" maxlength="30" placeholder="'+msg[current_lang]['set_activity']+'" oninput="updatePoint('+id_map+', '+current_id[id_map]+', \'activity\', this.value);" /></p>';
				}
			  
				var contentString = '<div>'+txt_otras+'<p>'+msg[current_lang]['name']+'</br><input type="text" size="25" maxlength="30" placeholder="'+msg[current_lang]['set_name_of_this_place']+'" oninput="updatePoint('+id_map+', '+current_id[id_map]+', \'name\', this.value);" /></p>'
				+'<p>'+msg[current_lang]['observations']+'</br><textarea cols="27" rows="3" maxlength="100" placeholder="'+msg[current_lang]['set_observations_of_this_place']+'" oninput="updatePoint('+id_map+', '+current_id[id_map]+', \'observations\', this.value);"> </textarea> </p>'
				+'<button style="float:left;background-color:green;color:white;border:none;cursor:pointer;" onclick="current_infowindow.close();return false;">'+msg[current_lang]['done']+'</button>'		  
				+'<button style="float:right;background-color:red;color:white;border:none;cursor:pointer;" onclick="if (confirm(\''+msg[current_lang]['sure_to_delete']+'\')) {deleteElement('+id_map+', '+current_id[id_map]+');current_infowindow.close();}return false;">'+msg[current_lang]['delete']+'</button>'		  
				+'</div>';
			}
			
			

			var infowindow = new google.maps.InfoWindow({
			  content: contentString
			});

			if (current_infowindow != null) {
			current_infowindow.close();
			}

			current_infowindow = infowindow;
			

			// set a new marker
			var newMarker = new google.maps.Marker({
			map: maps[id_map],
			icon: $(this).attr('src') ,
			position: pixelLatLng,
			draggable:true
			});

			// push the new marker in an array
			if (markers[id_map] == null) {
			markers[id_map] = [];
			}

			markers[id_map][current_id[id_map]]=newMarker;

			
			if ($(this).attr('popup_version') != 4) {
				current_infowindow.open(maps[id_map],newMarker);		  
			}
			
			
			newMarker.set("id", current_id[id_map]);		  			
			newMarker.set("infoWindow", infowindow);		  
				  
			google.maps.event.addListener(newMarker, 'dragend', function() {		  
			updatePoint(id_map, newMarker.get('id'), "lat", newMarker.position.lat());
			updatePoint(id_map, newMarker.get('id'), "lng", newMarker.position.lng());			
			});

			google.maps.event.addListener(newMarker, 'click', function() {
				infowindow = newMarker.get("infoWindow");
				if (infowindow != current_infowindow) {
					current_infowindow.close();
					current_infowindow = infowindow;
				}
				current_infowindow.open(maps[id_map],newMarker);			
			});		 

			updatePoint(id_map, current_id[id_map], "id", current_id[id_map]);
			updatePoint(id_map, current_id[id_map], "lat", newMarker.position.lat())
			updatePoint(id_map, current_id[id_map], "lng", newMarker.position.lng())
			updatePoint(id_map, current_id[id_map], "point_type", $(this).attr('point_type'));
			updatePoint(id_map, current_id[id_map], "point_level", $(this).attr('point_level'));		 
				 
			current_id[id_map]++;
			counter_elements[id_map]++;
	  }	else {
		  alert("out of BBOX");
	  }
	  
	  $(this).css({
          top: "0px",
          left: "0px"
      });
    }
  });
  
  initialize(0); // mapa 0
  initialize(1); // mapa 1
  initialize(2); // mapa 2
  initialize(3); // mapa 3
  
  
});

function updatePoint(id_map, id_element, key, value) {
	if (data_points[id_map][id_element] == null)  {
		data_points[id_map][id_element] = {};
	}	
	data_points[id_map][id_element][key] = value ;
}

function deleteElement(id_map, id_element) {	
	var m = markers[id_map][id_element];
	m.setMap(null);	
	data_points[id_map][id_element] = null;
	counter_elements[id_map]--;
}

// Google Maps
function initialize(id_map) {


	
  
  var mapOptions = {
    zoom: 10,
    center: coord , //new google.maps.LatLng(40.708869, 0.650823),  
    mapTypeId: google.maps.MapTypeId.TERRAIN,
	scaleControl:true
  };
  maps[id_map] = new google.maps.Map(document.getElementById('map-canvas'+id_map), mapOptions);    
  overlay[id_map] = new google.maps.OverlayView();
  overlay[id_map].draw = function() {};
  overlay[id_map].setMap(maps[id_map]);
  
  current_id[id_map] = 0;
  counter_elements[id_map] = 0;
  data_points[id_map] = [];
  
  var zoomLevel = maps[id_map].getZoom();	
  updateMapInfoText(id_map, zoomLevel);	
    
  google.maps.event.addListener(maps[id_map], 'zoom_changed', function() {	
    var zoomLevel = maps[id_map].getZoom();	
	updateMapInfoText(id_map, zoomLevel);	
  });  
  
  google.maps.event.addListener(maps[id_map], 'click', function() {
  if (current_infowindow != null) {
		current_infowindow.close();	 
	}
 });
 
 number_maps++;
 
}

function updateMapInfoText(id_map, zoomLevel) {
	if (zoomLevel>min_zoom_allowed) {		
		$('#map_error'+id_map).hide();
		$('#map_info'+id_map).show();		
	} else {		
		$('#map_error'+id_map).show();
		$('#map_info'+id_map).hide();
	}

}




function validateInput() {

	
	var validated = true;
	
	var error_text = "";
	var span_text_miss = "<span class='miss-value-error'>"+msg[current_lang]['miss_data_value']+"</span>";
	var span_text_max3 = "<span class='miss-value-error'>"+msg[current_lang]['max_3_values']+"</span>";
	var span_text_number_0_100 = "<span class='miss-value-error'>"+msg[current_lang]['is_not_number_0_100']+"</span>";
	
	$(".miss-value-error").remove();
	
	if(!isNaN($("#"+input_years).val())){		
		console.log("A");
		var num_years = $("#"+input_years).val();
		if (num_years < 0 || num_years > 100)
		{
			$("#question-field-"+input_years).append(span_text_number_0_100);
			$('html, body').animate({
				scrollTop: $('#question-title-'+input_years).offset().top
			}, 2000);
			return false;
		}		
		
	} else {
		console.log("B");
		$("#question-field-"+input_years).append(span_text_number_0_100);
		$('html, body').animate({
				scrollTop: $('#question-title-'+input_years).offset().top
			}, 2000);
		return false;
	}
	
	//validar checkboxes
	for (var id_group = 0; id_group < checksToValidate.length; id_group++) {
		var group = checksToValidate[id_group];
		
		var boxes = $('input[name="'+group+'"]:checked');		
		
		if (boxes.length == 0) {
			validated = false;
		}		
		
		if (validated == false) {
						
			group = group.replace('[]','');			
			if (group.includes("_")) {
				group = group.split("_")[0];
			}
			
			$("#question-field-"+group).append(span_text_miss);
			
			$('html, body').animate({
				scrollTop: $('#question-title-'+group).offset().top
			}, 2000);
			
			return false;			
		}
	}
	
	// validate max 3 options	
	for (var id_group = 0; id_group < checksToValidateMax3.length; id_group++) {
		var group = checksToValidateMax3[id_group];
		
		var boxes = $('input[name="'+group+'"]:checked');				
		
		if (boxes.length > 3) {
			validated = false;
		}		
		
		if (validated == false) {
			
			group = group.replace('[]','');
						
			$("#question-field-"+group).append(span_text_max3);
			
			$('html, body').animate({
				scrollTop: $('#question-title-'+group).offset().top
			}, 2000);
			
			return false;			
		}
	}
	
	

	//validar input de text
	for (var id_group = 0; id_group < textToValidate.length; id_group++) {
		var inputtext = textToValidate[id_group];
		
		if($("#"+inputtext).val().length === 0) {						
			validated = false;
		}		
		
		if (validated == false) {			
						
			$("#question-field-"+inputtext).append(span_text_miss);
			
			$('html, body').animate({
				scrollTop: $('#question-title-'+inputtext).offset().top
			}, 2000);
			
			return false;			
		}		
	}
	
	return true;	
}

function ValidateEmail(mail) 
{
	if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(mail))
	{
		return (true)
	}    
	return (false)
}

function parseDataPoints() {		
	
	for (var iMap = 0; iMap < number_maps;iMap++) {
		var text = "";
		for (var id_element=0; id_element < data_points[iMap].length; id_element++) {
			if (data_points[iMap][id_element] != null && data_points[iMap][id_element]['id'] != null) {
				text += ";point=>" + data_points[iMap][id_element]['id'];
				text += ";" + user_uid;				
				text += ";"+ (data_points[iMap][id_element]['name'] != null ? data_points[iMap][id_element]['name'] : "").trim().replace(/;/g, ".");
				if (data_points[iMap][id_element]['activity'] != null) {
					text += " - (actividad:"+ data_points[iMap][id_element]['activity'].trim().replace(/;/g, ".")+")";
				}
				text += ";"+ (data_points[iMap][id_element]['observations'] != null ? data_points[iMap][id_element]['observations'] : "").trim().replace(/;/g, ".");
				text += ";"+data_points[iMap][id_element]['lat'];
				text += ";"+data_points[iMap][id_element]['lng'];
				text += ";"+data_points[iMap][id_element]['point_type'];				
				text += ";"+(data_points[iMap][id_element]['point_level'] != null ? data_points[iMap][id_element]['point_level'] : "");
				text += ";"+(data_points[iMap][id_element]['check_v2'] != null ? data_points[iMap][id_element]['check_v2'] : "");
				text += ";"+(data_points[iMap][id_element]['check_v3'] != null ? data_points[iMap][id_element]['check_v3'] : "");
				text += ";"+(data_points[iMap][id_element]['otros_v2'] != null ? data_points[iMap][id_element]['otros_v2'] : "");
				text += ";"+(data_points[iMap][id_element]['otros_v3'] != null ? data_points[iMap][id_element]['otros_v3'] : "");
			}
		}	
		$("#"+mapLabels[iMap]).val(text);
	}	

	return true;
}

function function_read_checbox(id_map, id_element, attr_name) {
	
				
	var favorite = [];  $.each($("input[name='"+attr_name+"']:checked"), function(){
		favorite.push($(this).val());})
		
	updatePoint(id_map, id_element, attr_name, favorite);
	
}

function function_count_checked(check_name, max_val, checked) {
	
	if (checked) {		
		if ($("input[name='"+check_name+"']:checked").length > max_val) 
		{ alert(msg[current_lang]['max']+ ' ' + max_val);return false; } 
		else return true; 
	} else {
		return true;
	}
} 

				
				
				
var MD5 = function (string) {

   function RotateLeft(lValue, iShiftBits) {
           return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
   }

   function AddUnsigned(lX,lY) {
           var lX4,lY4,lX8,lY8,lResult;
           lX8 = (lX & 0x80000000);
           lY8 = (lY & 0x80000000);
           lX4 = (lX & 0x40000000);
           lY4 = (lY & 0x40000000);
           lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
           if (lX4 & lY4) {
                   return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
           }
           if (lX4 | lY4) {
                   if (lResult & 0x40000000) {
                           return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
                   } else {
                           return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
                   }
           } else {
                   return (lResult ^ lX8 ^ lY8);
           }
   }

   function F(x,y,z) { return (x & y) | ((~x) & z); }
   function G(x,y,z) { return (x & z) | (y & (~z)); }
   function H(x,y,z) { return (x ^ y ^ z); }
   function I(x,y,z) { return (y ^ (x | (~z))); }

   function FF(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function GG(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function HH(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function II(a,b,c,d,x,s,ac) {
           a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
           return AddUnsigned(RotateLeft(a, s), b);
   };

   function ConvertToWordArray(string) {
           var lWordCount;
           var lMessageLength = string.length;
           var lNumberOfWords_temp1=lMessageLength + 8;
           var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
           var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
           var lWordArray=Array(lNumberOfWords-1);
           var lBytePosition = 0;
           var lByteCount = 0;
           while ( lByteCount < lMessageLength ) {
                   lWordCount = (lByteCount-(lByteCount % 4))/4;
                   lBytePosition = (lByteCount % 4)*8;
                   lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
                   lByteCount++;
           }
           lWordCount = (lByteCount-(lByteCount % 4))/4;
           lBytePosition = (lByteCount % 4)*8;
           lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
           lWordArray[lNumberOfWords-2] = lMessageLength<<3;
           lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
           return lWordArray;
   };

   function WordToHex(lValue) {
           var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
           for (lCount = 0;lCount<=3;lCount++) {
                   lByte = (lValue>>>(lCount*8)) & 255;
                   WordToHexValue_temp = "0" + lByte.toString(16);
                   WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
           }
           return WordToHexValue;
   };

   function Utf8Encode(string) {
           string = string.replace(/\r\n/g,"\n");
           var utftext = "";

           for (var n = 0; n < string.length; n++) {

                   var c = string.charCodeAt(n);

                   if (c < 128) {
                           utftext += String.fromCharCode(c);
                   }
                   else if((c > 127) && (c < 2048)) {
                           utftext += String.fromCharCode((c >> 6) | 192);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }
                   else {
                           utftext += String.fromCharCode((c >> 12) | 224);
                           utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                           utftext += String.fromCharCode((c & 63) | 128);
                   }

           }

           return utftext;
   };

   var x=Array();
   var k,AA,BB,CC,DD,a,b,c,d;
   var S11=7, S12=12, S13=17, S14=22;
   var S21=5, S22=9 , S23=14, S24=20;
   var S31=4, S32=11, S33=16, S34=23;
   var S41=6, S42=10, S43=15, S44=21;

   string = Utf8Encode(string);

   x = ConvertToWordArray(string);

   a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;

   for (k=0;k<x.length;k+=16) {
           AA=a; BB=b; CC=c; DD=d;
           a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
           d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
           c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
           b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
           a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
           d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
           c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
           b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
           a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
           d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
           c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
           b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
           a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
           d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
           c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
           b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
           a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
           d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
           c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
           b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
           a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
           d=GG(d,a,b,c,x[k+10],S22,0x2441453);
           c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
           b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
           a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
           d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
           c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
           b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
           a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
           d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
           c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
           b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
           a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
           d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
           c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
           b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
           a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
           d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
           c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
           b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
           a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
           d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
           c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
           b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
           a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
           d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
           c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
           b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
           a=II(a,b,c,d,x[k+0], S41,0xF4292244);
           d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
           c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
           b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
           a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
           d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
           c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
           b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
           a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
           d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
           c=II(c,d,a,b,x[k+6], S43,0xA3014314);
           b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
           a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
           d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
           c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
           b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
           a=AddUnsigned(a,AA);
           b=AddUnsigned(b,BB);
           c=AddUnsigned(c,CC);
           d=AddUnsigned(d,DD);
   		}

   	var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);

   	return temp.toLowerCase();
}				